// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Operaciones.proto

package Consulta

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Consulta struct {
	NombreDominio        string   `protobuf:"bytes,1,opt,name=NombreDominio,proto3" json:"NombreDominio,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Consulta) Reset()         { *m = Consulta{} }
func (m *Consulta) String() string { return proto.CompactTextString(m) }
func (*Consulta) ProtoMessage()    {}
func (*Consulta) Descriptor() ([]byte, []int) {
	return fileDescriptor_f6f60a7c7fac8b5b, []int{0}
}

func (m *Consulta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Consulta.Unmarshal(m, b)
}
func (m *Consulta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Consulta.Marshal(b, m, deterministic)
}
func (m *Consulta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Consulta.Merge(m, src)
}
func (m *Consulta) XXX_Size() int {
	return xxx_messageInfo_Consulta.Size(m)
}
func (m *Consulta) XXX_DiscardUnknown() {
	xxx_messageInfo_Consulta.DiscardUnknown(m)
}

var xxx_messageInfo_Consulta proto.InternalMessageInfo

func (m *Consulta) GetNombreDominio() string {
	if m != nil {
		return m.NombreDominio
	}
	return ""
}

type Respuesta struct {
	IP                   string   `protobuf:"bytes,1,opt,name=IP,proto3" json:"IP,omitempty"`
	Reloj                string   `protobuf:"bytes,2,opt,name=Reloj,proto3" json:"Reloj,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Respuesta) Reset()         { *m = Respuesta{} }
func (m *Respuesta) String() string { return proto.CompactTextString(m) }
func (*Respuesta) ProtoMessage()    {}
func (*Respuesta) Descriptor() ([]byte, []int) {
	return fileDescriptor_f6f60a7c7fac8b5b, []int{1}
}

func (m *Respuesta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Respuesta.Unmarshal(m, b)
}
func (m *Respuesta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Respuesta.Marshal(b, m, deterministic)
}
func (m *Respuesta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Respuesta.Merge(m, src)
}
func (m *Respuesta) XXX_Size() int {
	return xxx_messageInfo_Respuesta.Size(m)
}
func (m *Respuesta) XXX_DiscardUnknown() {
	xxx_messageInfo_Respuesta.DiscardUnknown(m)
}

var xxx_messageInfo_Respuesta proto.InternalMessageInfo

func (m *Respuesta) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *Respuesta) GetReloj() string {
	if m != nil {
		return m.Reloj
	}
	return ""
}

func init() {
	proto.RegisterType((*Consulta)(nil), "Consulta.Consulta")
	proto.RegisterType((*Respuesta)(nil), "Consulta.Respuesta")
}

func init() { proto.RegisterFile("Operaciones.proto", fileDescriptor_f6f60a7c7fac8b5b) }

var fileDescriptor_f6f60a7c7fac8b5b = []byte{
	// 190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xf4, 0x2f, 0x48, 0x2d,
	0x4a, 0x4c, 0xce, 0xcc, 0xcf, 0x4b, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x70,
	0xce, 0xcf, 0x2b, 0x2e, 0xcd, 0x29, 0x49, 0x54, 0x32, 0xe0, 0x82, 0xb3, 0x85, 0x54, 0xb8, 0x78,
	0xfd, 0xf2, 0x73, 0x93, 0x8a, 0x52, 0x5d, 0xf2, 0x73, 0x33, 0xf3, 0x32, 0xf3, 0x25, 0x18, 0x15,
	0x18, 0x35, 0x38, 0x83, 0x50, 0x05, 0x95, 0x0c, 0xb9, 0x38, 0x83, 0x52, 0x8b, 0x0b, 0x4a, 0x53,
	0x8b, 0x4b, 0x12, 0x85, 0xf8, 0xb8, 0x98, 0x3c, 0x03, 0xa0, 0xea, 0x98, 0x3c, 0x03, 0x84, 0x44,
	0xb8, 0x58, 0x83, 0x52, 0x73, 0xf2, 0xb3, 0x24, 0x98, 0xc0, 0x42, 0x10, 0x8e, 0x51, 0x18, 0x97,
	0x18, 0xcc, 0x12, 0xe7, 0x9c, 0xcc, 0xd4, 0xbc, 0x92, 0xd4, 0xe0, 0xd4, 0xa2, 0xb2, 0xcc, 0xe4,
	0x54, 0x21, 0x1b, 0x2e, 0x7e, 0x34, 0x19, 0x21, 0x21, 0x3d, 0x98, 0x08, 0x9c, 0x21, 0x25, 0x8c,
	0x10, 0x83, 0xdb, 0xad, 0xc4, 0x60, 0x14, 0xc2, 0x25, 0x0a, 0x13, 0x77, 0x2a, 0xca, 0xcf, 0x4e,
	0x2d, 0x82, 0x19, 0x6b, 0xcd, 0xc5, 0x87, 0x2a, 0x41, 0x82, 0xa9, 0x49, 0x6c, 0xe0, 0x30, 0x32,
	0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x28, 0x41, 0x2b, 0xa0, 0x38, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConsultaClienteServiceClient is the client API for ConsultaClienteService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConsultaClienteServiceClient interface {
	ConsultaCliente(ctx context.Context, in *Consulta, opts ...grpc.CallOption) (*Respuesta, error)
}

type consultaClienteServiceClient struct {
	cc *grpc.ClientConn
}

func NewConsultaClienteServiceClient(cc *grpc.ClientConn) ConsultaClienteServiceClient {
	return &consultaClienteServiceClient{cc}
}

func (c *consultaClienteServiceClient) ConsultaCliente(ctx context.Context, in *Consulta, opts ...grpc.CallOption) (*Respuesta, error) {
	out := new(Respuesta)
	err := c.cc.Invoke(ctx, "/Consulta.ConsultaClienteService/ConsultaCliente", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConsultaClienteServiceServer is the server API for ConsultaClienteService service.
type ConsultaClienteServiceServer interface {
	ConsultaCliente(context.Context, *Consulta) (*Respuesta, error)
}

// UnimplementedConsultaClienteServiceServer can be embedded to have forward compatible implementations.
type UnimplementedConsultaClienteServiceServer struct {
}

func (*UnimplementedConsultaClienteServiceServer) ConsultaCliente(ctx context.Context, req *Consulta) (*Respuesta, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConsultaCliente not implemented")
}

func RegisterConsultaClienteServiceServer(s *grpc.Server, srv ConsultaClienteServiceServer) {
	s.RegisterService(&_ConsultaClienteService_serviceDesc, srv)
}

func _ConsultaClienteService_ConsultaCliente_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Consulta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsultaClienteServiceServer).ConsultaCliente(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Consulta.ConsultaClienteService/ConsultaCliente",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsultaClienteServiceServer).ConsultaCliente(ctx, req.(*Consulta))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConsultaClienteService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Consulta.ConsultaClienteService",
	HandlerType: (*ConsultaClienteServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ConsultaCliente",
			Handler:    _ConsultaClienteService_ConsultaCliente_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "Operaciones.proto",
}

// ConsultaBrokerServiceClient is the client API for ConsultaBrokerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConsultaBrokerServiceClient interface {
	ConsultaBroker(ctx context.Context, in *Consulta, opts ...grpc.CallOption) (*Respuesta, error)
}

type consultaBrokerServiceClient struct {
	cc *grpc.ClientConn
}

func NewConsultaBrokerServiceClient(cc *grpc.ClientConn) ConsultaBrokerServiceClient {
	return &consultaBrokerServiceClient{cc}
}

func (c *consultaBrokerServiceClient) ConsultaBroker(ctx context.Context, in *Consulta, opts ...grpc.CallOption) (*Respuesta, error) {
	out := new(Respuesta)
	err := c.cc.Invoke(ctx, "/Consulta.ConsultaBrokerService/ConsultaBroker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConsultaBrokerServiceServer is the server API for ConsultaBrokerService service.
type ConsultaBrokerServiceServer interface {
	ConsultaBroker(context.Context, *Consulta) (*Respuesta, error)
}

// UnimplementedConsultaBrokerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedConsultaBrokerServiceServer struct {
}

func (*UnimplementedConsultaBrokerServiceServer) ConsultaBroker(ctx context.Context, req *Consulta) (*Respuesta, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConsultaBroker not implemented")
}

func RegisterConsultaBrokerServiceServer(s *grpc.Server, srv ConsultaBrokerServiceServer) {
	s.RegisterService(&_ConsultaBrokerService_serviceDesc, srv)
}

func _ConsultaBrokerService_ConsultaBroker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Consulta)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConsultaBrokerServiceServer).ConsultaBroker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Consulta.ConsultaBrokerService/ConsultaBroker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConsultaBrokerServiceServer).ConsultaBroker(ctx, req.(*Consulta))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConsultaBrokerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Consulta.ConsultaBrokerService",
	HandlerType: (*ConsultaBrokerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ConsultaBroker",
			Handler:    _ConsultaBrokerService_ConsultaBroker_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "Operaciones.proto",
}
